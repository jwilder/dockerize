name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git describe to work

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Check Go version used:
        run: go version

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build release artifacts
        run: make release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Alpine Linux AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-alpine-linux-amd64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-alpine-linux-amd64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Alpine Linux PPC64LE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-alpine-linux-ppc64le-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-alpine-linux-ppc64le-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-amd64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-amd64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux 386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-386-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-386-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux ARMEL
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-armel-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-armel-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux ARMHF
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-armhf-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-armhf-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-arm64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-arm64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux PPC64LE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-ppc64le-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-ppc64le-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Darwin AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-darwin-amd64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-darwin-amd64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Darwin ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-darwin-arm64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-darwin-arm64-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux S390X
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dockerize-linux-s390x-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: dockerize-linux-s390x-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip
